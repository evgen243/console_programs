[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Посты",
    "section": "",
    "text": "Vim\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nJun 4, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nsudo\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCurl.Консольный менеджер загрузок.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ninternet\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nСоздание/Удаление пользователя\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nСоздание файловой системы\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBat\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nТерминал\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nФайловый менеджер\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nFsck - проверка флешки на ошибки\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMpg123\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nmusic\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nNano - консольный,текстовой редактор\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCat\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMount - монтирование дисков,образов\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ndisk\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nАрхиваторы в консоли\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\narchivers\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMoc/mocp - консольный аудио проигрыватель.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nmusic\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\ncron - Планировщик заданий.Консольный.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWget.Консольный менеджер загрузок.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ninternet\n\n\n\n\n\n\n\n\n\nApr 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда rsync(резервное копирование)\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ncopy\n\n\n\n\n\n\n\n\n\nApr 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\ndd - Запись iso-образа\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ndisk\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда inxi(данные о системе)\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда lsblk\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nterminal\n\n\ndisk\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/archivers/index.html",
    "href": "posts/archivers/index.html",
    "title": "Архиваторы в консоли",
    "section": "",
    "text": "Иногда бывают ситуации когда нужно использовать архиватор в консоли.В некоторых случаях это быстрее и удобнее.\n\nАрхив TAR\n\nАрхивирование файла или директории без сжатия:\ntar -cf архив.tar файл\n\nдополнительный ключ “v”, для подробного вывода процесса архивации:\n\n\ntar -cvf архив.tar директория/\n\n\n\nРаспаковка архива tar:\n\ntar -xvf архив.tar\n\n\n\nАрхивирование с использованием сжатия gzip:\n\ntar -zcvf архив.tar.gz файл\ntar -zcvf архив.tar.gz директория/\n\n\n\nАрхивирование с использованием сжатия bzip2:\n\ntar -jcvf архив.tar.bz2 файл\ntar -jcvf архив.tar.bz2 директория/\n\n\n\nПроверка архива gzip без распаковки:\n\ntar -zvtf архив.tar.gz\n\n\n\nПроверка архива bzip2 без распаковки:\n\ntar -jvtf архив.tar.bz2\n\n\n\nРаспаковка архива gzip:\n\ntar -zxvf архив.tar.gz\n\n\n\nРаспаковка архива bzip2 с указанием конечной папки для файлов:\n\ntar -jxvf архив.tar.bz2 директория/\n\n\n\nКоманды Tar:\n\nx — извлечь файлы из архива;\nv — подробный вывод информации на экран;\nf — Обязательная опция. Если не указать, Tar будет пытаться использовать магнитную ленту вместо файла;\nz — обработать архив сжатый gzip’ом;\nj — обработать архив сжатый bzip’ом.\n\n\n\n\nАрхив ZIP\n\nАрхивирование файла:\n\nzip архив.zip файл\n\n\n\nАрхивирование директории:\n\nzip -r архив.zip директория/\n\n\n\nПовышение уровня сжатия:\n\nzip -0 архив.zip файл\nzip -9 архив.zip файл\n\n\n\nЗащита архива паролем не рекомендуемая опция, показывает пароль:\nzip -P пароль архив.zip файл\n\n\nЗащита архива паролем,безопасная опция, пароль запрашивается и скрывается при вводе:\n\nzip -e архив.zip файл\n\n\n\nРазархивирование:\n\nunzip архив.zip\n\n\n\nДетальный вывод информации при распаковке:\n\nunzip -v архив.zip\n\n\n\nПолучение списка содержимого архива:\n\nunzip -l архив.zip\n\n\n\n\nАрхив 7z\n\nУстанавливаем:(В некоторых дистрибутивах установлен)\n\nsudo apt install p7zip p7zip-full (или Вашим пакетным менеджером)\n\n\n\nАрхивируем:\n\n7z a arch.7z file01.foo file02.foo\n\n\n\nРаспаковка:\n\n7z x arch.7z\n7z x arch.7z -o/куда_извлекать\n\n\n\nПросмотр архива:\n\n7z l arch.7z\n7z l -slt arch.7z\n\n\n\n\nAtool\n\nЕсли использовать утилиту atool, то вы сможете работать с любым форматом архивов\n\n\nУстановка:\n\nsudo apt install atool (или Вашим пакетным менеджером)\n\n\n\nРаспаковка:\n\naunpack foobar.tar.gz\n\n\n\nАрхивирование:\n\napack myarchive.zip file1 file2"
  },
  {
    "objectID": "posts/bat/index.html",
    "href": "posts/bat/index.html",
    "title": "Bat",
    "section": "",
    "text": "bat — это продвинутый cat\nbat — это продвинутый клон cat с поддержкой подсветки синтаксиса и интеграцией Git.\nЕсли вы хотите больше комфорта при просмотре файлов в терминале то стоит обратить внимание на bat.\nУтилита bat поддерживает подсветку синтаксиса для большого количества языков программирования. Вывод текста в читаемом виде и нумерация строк позволяем проще воспринимать код.\n\nПоддержка Git.\nВы будете видеть какие строки были добавлены либо изменены.\nВ Slackware уже установлена из “коробки”.\nВ остальных - своим пакетным менеджером."
  },
  {
    "objectID": "posts/cat/index.html",
    "href": "posts/cat/index.html",
    "title": "Cat",
    "section": "",
    "text": "Команда cat - это одна из часто используемых команд Linux.\nС помощью этой команды можно очень просто посмотреть содержимое небольшого файла, склеить несколько файлов и многое другое.\n\nКоманда cat\nНазвание команды - это сокращения от слова catenate. По сути, задача команды cat очень проста - она читает данные из файла или стандартного ввода и выводит их на экран. Это все, чем занимается утилита.\nОпции позволяют очень сильно видоизменить вывод и сделать именно то, что вам нужно. Рассмотрим основные опции:\n\n$ cat опции файл1 файл2 …\n-b - нумеровать только непустые строки\n-E - показывать символ $ в конце каждой строки\n-n - нумеровать все строки\n-s - удалять пустые повторяющиеся строки\n-T - отображать табуляции в виде ^I\n-h - отобразить справку\n-v - версия утилиты\n\nЭто было все описание linux cat, которое вам следует знать, далее рассмотрим примеры cat linux. Использование cat в Linux\nСамое простое, где используется команда cat - это просмотр содержимого файла:\n\n$ cat file\n\nКоманда просто выведет все, что есть в файле. Чтобы вывести несколько файлов достаточно просто передать их в параметрах:\n\n$ cat file file1\n\nвы можете нумеровать все строки в файле:\n\n$ cat -n file\n\nВозможность объединения нескольких файлов не была бы настолько полезна, если бы нельзя было записать все в один:\n\n$ cat file1 file2 &gt; file3\n$ cat file3\n\nМожно получить очень примитивный текстовый редактор - прочитаем ввод и перенаправим его вместо вывода на экран в файл:\n\n$ cat &gt; file2\nEnter\nbla-bla-bla\nEnter\nCtrl+D\n\nПосмотреть содержимое созданного файла:\n\n$ cat file2"
  },
  {
    "objectID": "posts/console/index.html",
    "href": "posts/console/index.html",
    "title": "Терминал",
    "section": "",
    "text": "Попробую здесь показать как обычный терминал может заменить файловый менеджер.\nБывают случаи когда проще воспользоваться терминалом как файловым менеджером.Никогда не встречались с ситуацией когда не возможно удалить файл,директорию?В консоли это не вопрос.\nРабота в терминале может показаться не комфортной,не удобной,нужно запоминать много команд.\nНа самом деле для начала работы нужно запомнить 10-12 команд.Ну а далее,если заинтересует,будет проще.\n\n\npwd - выводит полный путь директории где находимся\nls - выводит что находится в директории\nmkdir - создать пустую директорию\ncd - сменить директорию\ntouch file1 - создать пустой файл\n&gt; file1 - создать пустой файл\necho &gt; file.txt - создать пустой файл\necho ‘bla-bla-bla-bla’&gt;&gt; file.txt - дописать в файл\necho ‘bla-bla’&gt; file.txt - перезаписать(сотрет прежнее содержимое) в файл\ncat - просмотр файла\nmv - переименовать,переместить файл,директорию\ncp - копировать файл, пустую директорию\ncp -r - копировать директорию с файлами\nrm - удалить файл\nrmdir - удалить пустую директорию\nrm -r - удалить директорию с файлами\n\nС помощью оператора && (and) можно совмещать команды:\n\n$ mkdir new\n$ cd mkdir new/ && touch file.txt file.md"
  },
  {
    "objectID": "posts/cron/index.html",
    "href": "posts/cron/index.html",
    "title": "cron - Планировщик заданий.Консольный.",
    "section": "",
    "text": "Есть много полезных консольных команд и приложений.Одна из них Cron(crontab).\n#|  hour (0-23),\n#|  |   day of the month (1-31),\n#|  |   |   month of the year (1-12),\n#|  |   |   |   day of the week (0-6 with 0=Sunday).\n#|  |   |   |   |   commands\n\ncrontab -e – открывает конфигурационный файл\ncrontab -l – показывает список задач из конфигурационного файла (все, что было запланировано).\ncrontab -r – удаляет конфигурационный файл вместе со всеми запланированными задачами.\nсrontab -v – показывает, когда в последний раз открывался конфигурационный файл.\n\n\ncrontab -e создать задание(работает от имени пользователя,без sudo)\n\n\nCron.Его основная задача выполнять нужные процессы в нужное время.(Планировщик заданий)\n\nНа моем примере:\n\ncrontab -e\n00 09 16 * * echo ‘date’ &gt; /home/jenit/Desktop/date.txt\n\n\n\n\nВ Astra Linux так делать запись:\n\nsudo crontab -u jenit -e\n00 09 16 * * echo ‘date’ &gt; /home/jenit/Desktop/date.txt\n\n(Расшифровка: в ноль минут,в девять часов,шестнадцатого числа,каждый месяц отпралять сообщение со словом data на рабочий стол,в файл data.txt.)\n00 - минуты\n09 - часы\n16 - дата,(день месяца)\n* - месяц\n* - день недели\n\nМой crontab -e\n\n00 09 16 * * echo ‘date’ &gt; /home/jenit/‘Рабочий стол’/date.txt\n00 08 05 03 * echo ‘Birthday’ &gt; /home/jenit/‘Рабочий стол’/date-Sl.txt\n\nПосмотрите в свое файловом менеджере как у Вас пишется “Рабочий стол” или “Desktop”\n\n\n\nEnter - сохранить\n\n\n\nЕсли нужно по расписанию проиграть звуковой файл.\n\n00 08 * * * /usr/bin/mpg123 /home/jenit/Music/mahnem.mp3\n\nУ меня почему то корректно работает только с mpg123(консольный аудио проигрыватель)"
  },
  {
    "objectID": "posts/curl/index.html",
    "href": "posts/curl/index.html",
    "title": "Curl.Консольный менеджер загрузок.",
    "section": "",
    "text": "cURL — инструмент командной строки и библиотека для передачи данных с URL-адресов.\nКоманда поддерживает многие протоколы, включая HTTP, HTTPS, FTP, SCP и SFTP.\n\nСкачивание:\n\n$ curl -o название файла URL\n$ curl опции ссылка\n\n\n\nОсновные опции:\n-# - отображать простой прогресс-бар во время загрузки;\n-0 - использовать протокол http 1.0;\n-1 - использовать протокол шифрования tlsv1;\n-2 - использовать sslv2;\n-3 - использовать sslv3;\n-4 - использовать ipv4;\n-6 - использовать ipv6;\n-A - указать свой USER_AGENT;\n-b - сохранить Cookie в файл;\n-c - отправить Cookie на сервер из файла;\n-C - продолжить загрузку файла с места разрыва или указанного смещения;\n-m - максимальное время ожидания ответа от сервера;\n-d - отправить данные методом POST;\n-D - сохранить заголовки, возвращенные сервером в файл;\n-e - задать поле Referer-uri, указывает с какого сайта пришел пользователь;\n-E - использовать внешний сертификат SSL;\n-f - не выводить сообщения об ошибках;\n-F - отправить данные в виде формы;\n-G - если эта опция включена, то все данные, указанные в опции -d будут передаваться методом GET;\n-H - передать заголовки на сервер;\n-I - получать только HTTP заголовок, а все содержимое страницы игнорировать;\n-j - прочитать и отправить cookie из файла;\n-J - удалить заголовок из запроса;\n-L - принимать и обрабатывать перенаправления;\n-s - максимальное количество перенаправлений с помощью Location;\n-o - выводить контент страницы в файл;\n-O - сохранять контент в файл с именем страницы или файла на сервере;\n-p - использовать прокси;\n--proto - указать протокол, который нужно использовать;\n-R -  сохранять время последнего изменения удаленного файла;\n-s - выводить минимум информации об ошибках;\n-S - выводить сообщения об ошибках;\n-T - загрузить файл на сервер;\n-v - максимально подробный вывод;\n-y - минимальная скорость загрузки;\n-Y - максимальная скорость загрузки;\n-z - скачать файл, только если он был модифицирован позже указанного времени;\n-V - вывести версию."
  },
  {
    "objectID": "posts/dd/index.html",
    "href": "posts/dd/index.html",
    "title": "dd - Запись iso-образа",
    "section": "",
    "text": "Способ - dd\nОпределить имя flash-носителя, например, sd[x]:\n\n$ sudo fdisk -l\n\nor\n\n$ lsblk\n\nПерейдите в консоли в каталог с iso-образом:\n\n$ cd /путь/до/образа\n\n\n\nЗапись iso-образа:\n(это для Всех OS)\n\n$ dd if=***.iso of=/dev/sd[x] status=progress\n\nstatus=progress - показывает прогресс записи\n\n\nВАЖНО!\nВместо sd[x] укажите свое имя носителя.\nПри этом будут стерты все данные на USB накопителе и записаны новые!\n\n\nДля RedOS\nДля систем с UEFI и таблицей разделов GPT следует подготовить flash-носитель, выполнив список команд:\n\nparted -s /dev/sd[x] mklabel gpt\nparted -s –align=optimal /dev/sd[x] mkpart REDOS fat32 1MiB 100%\nparted -s /dev/sd[x] set 1 boot on\nmkfs.vfat -F 32 /dev/sd[x]\n\n\n\nЗапись iso-образа:\n\n$ dd if=***.iso of=/dev/sd[x] status=progress\n\nstatus=progress - показывает прогресс записи\nЕсли хотите видеть процесс создания флешки для этого нужно будет установить улучшенную версию dd, которая носит название dcfldd.\n\nsudo apt-get install dcfldd\n\nСотрудники лаборатории DoD Computer Forensics Laboratory (DCFL) внесли некоторые изменения в команду dd, тем самым улучшив ее и применяя в своих исследовательских работах. В итоге на свет появилась команда dcfldd, которая обеспечивает хеширование копируемых данных через некоторые промежутки времени для их аутентификации. Более того, dcfldd работает гораздо быстрее, чем dd.\nТеперь, если Вы хотите именно видеть прогресс копирования, либо создания образа, Вам нужно выполнить команду:\n\nsudo dcfldd if=/dev/sdc of=image.iso"
  }
]